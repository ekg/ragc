# Test 1: Simple sequence (ACGTACGT)
Count: 6
K-mers: 1800000000000000 1800000000000000 b000000000000000 b000000000000000 1800000000000000 1800000000000000

# Test 2: Sequence with N (AC[N]GTAC)
Count: 2
K-mers: b000000000000000 b000000000000000

# Test 3: Short sequence (AC, k=3)
Count: 0
K-mers: 

# Test 4: Longer sequence (ACGTACGTACGT, k=5)
Count: 8
K-mers: 1b00000000000000 6c40000000000000 6c40000000000000 1b00000000000000 1b00000000000000 6c40000000000000 6c40000000000000 1b00000000000000

# Test 5: Remove non-singletons
Before: Count: 10
K-mers: 1 2 2 3 3 3 4 5 5 6
After: Count: 3
K-mers: 1 4 6

# Test 6: Remove non-singletons with virtual_begin=2
Before: Count: 8
K-mers: 1 1 2 3 3 4 5 5
After: Count: 4
K-mers: 1 1 2 4

# Test 7: Find candidate k-mers (with sorting)
All k-mers: Count: 6
K-mers: 1800000000000000 1800000000000000 b000000000000000 b000000000000000 1800000000000000 1800000000000000
Sorted: Count: 6
K-mers: 1800000000000000 1800000000000000 1800000000000000 1800000000000000 b000000000000000 b000000000000000
Singletons: Count: 0
K-mers: 

# Test 8: All unique k-mers (ACGTCATG)
All k-mers: Count: 6
K-mers: 1800000000000000 1800000000000000 8400000000000000 d000000000000000 3800000000000000 3800000000000000
Sorted: Count: 6
K-mers: 1800000000000000 1800000000000000 3800000000000000 3800000000000000 8400000000000000 d000000000000000
Singletons: Count: 2
K-mers: 8400000000000000 d000000000000000
